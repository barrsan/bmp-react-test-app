// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TableRow component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableRow
    description=""
    name="Test name"
    organization=""
    place="Test place"
    scheme={
        Array [
            Object {
              "accessor": "name",
              "header": "Test 1",
            },
            Object {
              "accessor": "organization",
              "header": "Test 2",
            },
            Object {
              "accessor": "place",
              "header": "Test 3",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td>
          Test name
</td>,
        <td />,
        <td>
          Test place
</td>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "name",
        "nodeType": "host",
        "props": Object {
          "children": "Test name",
        },
        "ref": null,
        "rendered": "Test name",
        "type": "td",
      },
      Object {
        "instance": null,
        "key": "organization",
        "nodeType": "host",
        "props": Object {
          "children": "",
        },
        "ref": null,
        "rendered": "",
        "type": "td",
      },
      Object {
        "instance": null,
        "key": "place",
        "nodeType": "host",
        "props": Object {
          "children": "Test place",
        },
        "ref": null,
        "rendered": "Test place",
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td>
            Test name
</td>,
          <td />,
          <td>
            Test place
</td>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "name",
          "nodeType": "host",
          "props": Object {
            "children": "Test name",
          },
          "ref": null,
          "rendered": "Test name",
          "type": "td",
        },
        Object {
          "instance": null,
          "key": "organization",
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "td",
        },
        Object {
          "instance": null,
          "key": "place",
          "nodeType": "host",
          "props": Object {
            "children": "Test place",
          },
          "ref": null,
          "rendered": "Test place",
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
