// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Exhibits component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Exhibits
    currentPage={0}
    filterData={Array []}
    items={Array []}
    setExhibitsFilter={[Function]}
    setExhibitsSearchString={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Экспонаты
</h1>,
        <SearchForm
          setSearchString={[Function]}
/>,
        <Table
          columns={
                    Array [
                              Object {
                                "accessor": "name",
                                "header": "Название",
                                "width": "200px",
                              },
                              Object {
                                "accessor": "place",
                                "filterComponent": <FilterSelector
                                  handler={[Function]}
                                  options={Array []}
                                  type="place"
                    />,
                                "header": "Место создания",
                                "width": "200px",
                              },
                              Object {
                                "accessor": "organization",
                                "header": "Организация",
                                "width": "200px",
                              },
                              Object {
                                "accessor": "description",
                                "header": "Описание",
                                "width": "",
                              },
                            ]
          }
          data={Array []}
/>,
        <Pagination
          currentPage={0}
          pagesNumber={0}
/>,
      ],
      "className": "exhibits",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Экспонаты",
        },
        "ref": null,
        "rendered": "Экспонаты",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "setSearchString": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "columns": Array [
            Object {
              "accessor": "name",
              "header": "Название",
              "width": "200px",
            },
            Object {
              "accessor": "place",
              "filterComponent": <FilterSelector
                handler={[Function]}
                options={Array []}
                type="place"
/>,
              "header": "Место создания",
              "width": "200px",
            },
            Object {
              "accessor": "organization",
              "header": "Организация",
              "width": "200px",
            },
            Object {
              "accessor": "description",
              "header": "Описание",
              "width": "",
            },
          ],
          "data": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "currentPage": 0,
          "pagesNumber": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Экспонаты
</h1>,
          <SearchForm
            setSearchString={[Function]}
/>,
          <Table
            columns={
                        Array [
                                    Object {
                                      "accessor": "name",
                                      "header": "Название",
                                      "width": "200px",
                                    },
                                    Object {
                                      "accessor": "place",
                                      "filterComponent": <FilterSelector
                                        handler={[Function]}
                                        options={Array []}
                                        type="place"
                        />,
                                      "header": "Место создания",
                                      "width": "200px",
                                    },
                                    Object {
                                      "accessor": "organization",
                                      "header": "Организация",
                                      "width": "200px",
                                    },
                                    Object {
                                      "accessor": "description",
                                      "header": "Описание",
                                      "width": "",
                                    },
                                  ]
            }
            data={Array []}
/>,
          <Pagination
            currentPage={0}
            pagesNumber={0}
/>,
        ],
        "className": "exhibits",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Экспонаты",
          },
          "ref": null,
          "rendered": "Экспонаты",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "setSearchString": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "columns": Array [
              Object {
                "accessor": "name",
                "header": "Название",
                "width": "200px",
              },
              Object {
                "accessor": "place",
                "filterComponent": <FilterSelector
                  handler={[Function]}
                  options={Array []}
                  type="place"
/>,
                "header": "Место создания",
                "width": "200px",
              },
              Object {
                "accessor": "organization",
                "header": "Организация",
                "width": "200px",
              },
              Object {
                "accessor": "description",
                "header": "Описание",
                "width": "",
              },
            ],
            "data": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "currentPage": 0,
            "pagesNumber": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
